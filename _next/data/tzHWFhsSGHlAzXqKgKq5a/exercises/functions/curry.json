{"pageProps":{"exercises":[{"id":"fibonacci","title":"Fibonacci","description":"Write function that generates fibonacci sequence with given length.","fullSlug":"algorithms/fibonacci","slug":"fibonacci","cat":"algorithms","tests":"```js\ngenerateFibonacci(10) === [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\n```\n```js\ngenerateFibonacci(20) === [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181]\n```\n","code":" // generate fibonacci sequence with given length starting from 0 (0, 1, 1, 2, 3...)\n function generateFibonacci(length) {\n\n \n } "},{"id":"map","title":"Map","description":"Write function that generates mapped array but you can't use array.map method.","fullSlug":"array/map","slug":"map","cat":"array","tests":"```js\nconst arr = [2, 3, 4];\nconst callback = (val) => val * 2;\nconst result = map(arr, callback);\nresult[0] == 4 && result[1] == 6 && result[2] == 8\n```\n\n```js\n!map.toString().includes('.map');\n// messages\n{\n  \"fail\": \"you can't use array map method\",\n  \"success\": \"you have not used array map method\"\n}\n```","code":" // function that return mapped array\n // can't use array map method\n // callback has to accept in order: current element, index, full array\n\n function map(arr, callback) {\n \n } "},{"id":"sort","title":"Sort","description":"Write function that generates sorted array but you can't use array.sort method.","fullSlug":"array/sort","slug":"sort","cat":"array","tests":"```js\nsort([10, 20, 30, 40, 10, 1, 2, 4, 3, 2, 100, 1, -1, -2], (a, b) => a - b) === [-1, -2, 1, 1, 10, 10, 100, 2, 2, 20, 3, 30, 4, 40]\n```\n\n","code":" // function that return sorted array\n // can't use array sort method\n // callback has to accept in order: prev element, current element \n // callback should return >= 1 when prev element is higher than current element \n function sort(arr, compare) {\n\n \n } "},{"id":"adder-function","title":"Adder function","description":"Write function that generates adder function.","fullSlug":"functions/adder-function","slug":"adder-function","cat":"functions","tests":"```js\ncreateAdder(2)(2) === 4\n```\n```js\ncreateAdder(10)(12) === 22\n```\n","code":" // write function that create adder function\n\n function createAdder(base) {\n \n } ","hints":"hints"},{"id":"curry-function","title":"Curry function","description":"Write function that generates curry function.","fullSlug":"functions/curry","slug":"curry","cat":"functions","tests":"```js\nconst adder(a, b, c, d) => a + b + c + d;\ncurry(adder)(2)(2)(2)(2) === 8\n```\n```js\ncurry(adder)(10, 11)(-2)(-2) === 17\n```\n","code":" // write curry function\n\n function curry(func) {\n \n } ","hints":"hints"},{"id":"palindrome","title":"Check if palindrome","description":"Write function that checks if string is palindrome.","fullSlug":"string/palindrome","slug":"palindrome","cat":"string","tests":"```js\ncheckIfPalindrome('zy') === false;\n```\n\n```js\ncheckIfPalindrome('abba') === true;\n```\n\n```js\ncheckIfPalindrome('1111') === true;\n```\n\n```js\ncheckIfPalindrome('cebula') === false;\n```","code":" // write function that checks if string is palindrome\n\n function checkIfPalindrome(str) {\n \n } "}],"exercise":{"id":"curry-function","title":"Curry function","description":"Write function that generates curry function.","fullSlug":"functions/curry","slug":"curry","cat":"functions","tests":"```js\nconst adder(a, b, c, d) => a + b + c + d;\ncurry(adder)(2)(2)(2)(2) === 8\n```\n```js\ncurry(adder)(10, 11)(-2)(-2) === 17\n```\n","code":" // write curry function\n\n function curry(func) {\n \n } ","hints":"hints"}},"__N_SSG":true}